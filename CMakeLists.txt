cmake_minimum_required(VERSION 3.18)
set(PROJECT_NAME VINS)
project(${PROJECT_NAME})
cmake_policy(SET CMP0111 OLD)

set(CMAKE_CXX_STANDARD 17)
set(EXECUTABLE_OUTPUT_PATH bin)
set(LIBRARY_OUTPUT_PATH lib)
set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)

include(SetPlatformVarsInternal)
include(FindBoostInternal)
include(FindCeresInternal)
include(FindEigen3Internal)
include(FindPangolinInternal)
include(FindRabbitMQInternal)
include(FindJsonInternal)
include(FindOpenCVInternal)
include(FindSuiteParseInternal)

if(_WIN_)
	add_definitions(-DNOMINMAX)
	set(CMAKE_CXX_FLAGS "/bigobj /EHsc")
endif()

#find_package(OpenCV REQUIRED)
#find_package(Ceres REQUIRED)
#find_package(Eigen3 REQUIRED)
#find_package(Pangolin REQUIRED)
#find_package(rabbitmq-c REQUIRED)
#find_package(Boost REQUIRED COMPONENTS filesystem program_options system)

#find_path(JSON_INCLUDE_DIR NAMES json HINTS ../jsoncpp/include)
#find_file(JSON_RELEASE_LIB json_vc141_libmt.lib HINTS ../jsoncpp/lib)
#find_file(JSON_DEBUG_LIB json_vc141_libmtd.lib HINTS ../jsoncpp/lib)

#include_directories(${JSON_INCLUDE_DIR})
#include_directories(${CERES_INCLUDE_DIRS})
#include_directories(${OpenCV_INCLUDE_DIRS})
#include_directories(${Pangolin_INCLUDE_DIRS})
#include_directories(${Boost_INCLUDE_DIRS})

include_directories(${EIGEN3_INCLUDE_DIRS})
include_directories(${CMAKE_SOURCE_DIR}/ios_player)
include_directories(${CMAKE_SOURCE_DIR}/win_player)
include_directories(${CMAKE_SOURCE_DIR}/thirdparty)
include_directories(${CMAKE_SOURCE_DIR}/estimator)

add_subdirectory(thirdparty)

if(TARGET DBoW)
	add_subdirectory(estimator)
endif()

if(_WIN_)
	add_subdirectory(win_player)
endif()

if(_WIN_ AND TARGET win_player)
	add_subdirectory(example)
endif()

if(_OSX_ AND TARGET DBoW AND TARGET vins_estimator)
	add_subdirectory(ios_player)
endif()